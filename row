
ip address translate in binar format for statistic analys

http://koldunov.net/?p=381 - scipy

Если надо выбрать только неповторяющиеся значения поля [Field] таблицы [Table], то
SELECT [Field] FROM [Table] GROUP BY [Field] HAVING COUNT(*)=1

-- только уникальные записи
SELECT DISTINCT t.num FROM tblname t;


pattern_request = 'HTTP/....$'
request = ln[11:15]
if  re.search(pattern_request, ' '.join(ln[11:15])) is None:
			pass
else: request = ln[11:14]
elif re.search(pattern_request, ' '.join(ln[11:14])) is None:
			pass
else: request = ln[11:13]
elif re.search(pattern_request, ' '.join(ln[11:13])) is None:
			pass
else: request = ln[11:12]
elif re.search(pattern_request, ' '.join(ln[11:12])) is None:
			pass
else request = ln[11]


# soft ping
ping -I 186.2.164.38 94.75.227.164

# hard ping
ping -I 192.168.122.1 -ADb -c 10 -p ff -s 1452 -t 128 190.115.19.42

# telnet to 80 port
telnet -b 186.2.163.197 185.148.37.49 80

# telnet to 443 port
telnet -b 186.2.163.197 185.148.37.49 443

# openssl connect to 443 port
echo |openssl s_client -connect 186.2.161.78:443 -status
openssl s_client -connect styduck.com:443 -servername styduck.com

# sotf traceroute
mtr -a 186.2.163.197 -tber 185.148.37.49

# hard traceroute TCP
mtr -a 192.168.122.1 -TP 80 -tber -B 255 190.115.19.42

# hard traceroute UDP
mtr -a 192.168.122.1 -UP 53 -tber -B 255 190.115.19.42

# TCPtraceroute to 80 port
tcptraceroute -NFE -m 72 -l 1400 --dnat ya.ru 80

# TCPtraceroute to 443 port
tcptraceroute -NFE -m 72 -l 1400 --dnat ya.ru 443

# GET request
import httplib
conn = httplib.HTTPConnection("unrix.com")
conn.request("GET","/")
res = conn.getresponse()
print res.status, res.reason
conn.close()

# POST request
import httplib
conn = httplib.HTTPConnection("unrix.com")
conn.request("POST","/")
res = conn.getresponse()
print res.status, res.reason
conn.close()

#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import httplib

###src = raw_input('input source address :')
dst = raw_input('input destination address :')
dst_tls = dst+':443'

os.system('echo {0}'.format(src))

# soft ping
os.system('ping -I src -c 10 dst')
# echo 21
os.system('ping -c 10 -I 186.2.163.251 {0}'.format(dst))
# echo 22
os.system('ping -c 10 -I 186.2.163.252 {0}'.format(dst))
# echo 22
os.system('ping -c 10 -I 186.2.163.253 {0}'.format(dst))

# hard ping
os.system('ping -I src -ADb -c 10 -p ff -s 1452 -t 128 dst')
# echo 21
os.system('ping -I 186.2.163.251 -ADb -c 10 -p ff -s 1452 -t 128 {0}'.format(dst))
# echo 22
os.system('ping -I 186.2.163.252 -ADb -c 10 -p ff -s 1452 -t 128 {0}'.format(dst))
# echo 41
os.system('ping -I 186.2.163.253 -ADb -c 10 -p ff -s 1452 -t 128 {0}'.format(dst))

# openssl connect to 443 port
os.system('echo |openssl s_client -connect dst:443 -status')
# echo 21
s.system('echo |openssl s_client -status -connect {0}'.format(dst_tls))
# echo 22
s.system('echo |openssl s_client -connect -status {0}'.format(dst_tls))
# echo 4dst1
s.system('echo |openssl s_client -connect -status {0}'.format(dst_tls))
#openssl s_client -connect styduck.com:443 -servername styduck.com

# sotf traceroute
os.system('mtr -a src -tber dst')

# hard traceroute TCP
os.system('mtr -a src -TP 80 -tber -B 255 dst')

# hard traceroute UDP
os.system('mtr -a 192.168.122.1 -UP 53 -tber -B 255 dst')

# TCPtraceroute to 80 port
os.system('tcptraceroute -NFE -m 72 -l 1400 --dnat dst 80')

# TCPtraceroute to 443 port
os.system('tcptraceroute -NFE -m 72 -l 1400 --dnat dst 443')

# telnet to 80 port
os.system('telnet -b src dst 80')

# telnet to 443 port
os.system('telnet -b src dst 443')

# GET request
import httplib
conn = httplib.HTTPConnection("dst")
conn.request("GET","/")
res = conn.getresponse()
print res.status, res.reason
conn.close()

# POST request
import httplib
conn = httplib.HTTPConnection("dst")
conn.request("POST","/")
res = conn.getresponse()
print res.status, res.reason
conn.close()
